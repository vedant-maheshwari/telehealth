{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasingh/Downloads/frontend_changes_telehealth/frontend/src/components/doctor_dashboard/doctor_dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserMe, createChatRoom, viewMyChats, addPatientVitals, API_BASE_URL } from '../../services/api'; // Adjust the path as necessary\nimport './doctor_dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [user, setUser] = useState({\n    name: 'Loading...',\n    email: ''\n  });\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isChatsModalOpen, setIsChatsModalOpen] = useState(false);\n  const [isVitalsModalOpen, setIsVitalsModalOpen] = useState(false);\n  const [chatRooms, setChatRooms] = useState([]);\n  const [roomName, setRoomName] = useState('');\n  const [participants, setParticipants] = useState('');\n  const [vitalEmail, setVitalEmail] = useState('');\n  const [vitalBP, setVitalBP] = useState('');\n  const navigate = useNavigate();\n  const loadUser = useCallback(async () => {\n    const token = sessionStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const userData = await getUserMe(token);\n      sessionStorage.setItem(\"user_id\", userData.id);\n      setUser(userData);\n\n      // Redirect if not a doctor\n      if (userData.role !== \"doctor\") {\n        navigate(`/${userData.role}-dashboard`); // Redirect to appropriate dashboard\n      }\n    } catch (err) {\n      console.error(\"User loading failed:\", err);\n      sessionStorage.clear();\n      alert(\"Please login again\");\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n  const logout = () => {\n    sessionStorage.clear();\n    navigate(\"/login\");\n  };\n  const handleCreateChatRoom = async () => {\n    if (!roomName.trim() || !participants.trim()) {\n      alert(\"Fill room name and participant IDs.\");\n      return;\n    }\n    const participant_ids = participants.split(\",\").map(s => Number(s.trim())).filter(n => !isNaN(n) && n > 0);\n    if (participant_ids.length === 0) {\n      alert(\"Enter valid participant IDs (e.g., 2,5,7).\");\n      return;\n    }\n    try {\n      const data = await createChatRoom(roomName, participant_ids);\n      navigate(`/chat?chatId=${data.id}`); // Navigate to the new chat room\n      setIsCreateModalOpen(false);\n    } catch (err) {\n      alert(`Failed to create chat room: ${err.message}`);\n    }\n  };\n  const handleViewMyChats = async () => {\n    try {\n      const chats = await viewMyChats();\n      setChatRooms(chats);\n      setIsChatsModalOpen(true);\n    } catch (err) {\n      alert(`Failed to load chat rooms: ${err.message}`);\n    }\n  };\n  const handleOpenChat = chatId => {\n    navigate(`/chat?chatId=${chatId}`);\n  };\n  const handleAddVitals = async () => {\n    const bp = parseInt(vitalBP.trim());\n    if (!vitalEmail.trim() || isNaN(bp)) {\n      alert(\"Fill all fields correctly.\");\n      return;\n    }\n    try {\n      await addPatientVitals(vitalEmail, bp);\n      alert(\"Vitals added successfully!\");\n      setIsVitalsModalOpen(false);\n      setVitalEmail('');\n      setVitalBP('');\n    } catch (err) {\n      alert(`Error adding vitals: ${err.message}`);\n    }\n  };\n\n  // Helper for navigation to external page/route\n  const handleViewAppointments = () => {\n    navigate(\"/doctor-appointments\"); // Assuming you have a route for this\n    // OR window.location.href = \"doctor_appointment.html\"; if not using routing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Doctor Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"userName\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"userEmail\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        id: \"createSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsCreateModalOpen(true),\n          children: \"Create Chat Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleViewMyChats,\n          children: \"View My Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleViewAppointments,\n          children: \"View Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Patient Vitals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsVitalsModalOpen(true),\n          children: \"Add Vitals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false),\n      title: \"Create Chat Room\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Room Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: roomName,\n        onChange: e => setRoomName(e.target.value),\n        placeholder: \"Enter chat room name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Participant IDs (comma separated):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: participants,\n        onChange: e => setParticipants(e.target.value),\n        placeholder: \"e.g. 2,5,7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateChatRoom,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => setIsCreateModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isChatsModalOpen,\n      onClose: () => setIsChatsModalOpen(false),\n      title: \"Your Chat Rooms\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatRooms\",\n        children: chatRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No chat rooms found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this) : chatRooms.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: c.name || \"Chat Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Room ID: \", c.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOpenChat(c.id),\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this)]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isVitalsModalOpen,\n      onClose: () => setIsVitalsModalOpen(false),\n      title: \"Add Patient Vitals\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Patient Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: vitalEmail,\n        onChange: e => setVitalEmail(e.target.value),\n        placeholder: \"patient@example.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blood Pressure (BP):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: vitalBP,\n        onChange: e => setVitalBP(e.target.value),\n        placeholder: \"Enter BP value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddVitals,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => setIsVitalsModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n// Simple Modal component for reusability\n_s(DoctorDashboard, \"AVVxvtI++lndAxaJALjONaF7O2E=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorDashboard;\nconst Modal = ({\n  isOpen,\n  onClose,\n  title,\n  children\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    style: {\n      display: 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Modal;\nexport default DoctorDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"DoctorDashboard\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","getUserMe","createChatRoom","viewMyChats","addPatientVitals","API_BASE_URL","jsxDEV","_jsxDEV","DoctorDashboard","_s","user","setUser","name","email","isCreateModalOpen","setIsCreateModalOpen","isChatsModalOpen","setIsChatsModalOpen","isVitalsModalOpen","setIsVitalsModalOpen","chatRooms","setChatRooms","roomName","setRoomName","participants","setParticipants","vitalEmail","setVitalEmail","vitalBP","setVitalBP","navigate","loadUser","token","sessionStorage","getItem","userData","setItem","id","role","err","console","error","clear","alert","logout","handleCreateChatRoom","trim","participant_ids","split","map","s","Number","filter","n","isNaN","length","data","message","handleViewMyChats","chats","handleOpenChat","chatId","handleAddVitals","bp","parseInt","handleViewAppointments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Modal","isOpen","onClose","title","type","value","onChange","e","target","placeholder","c","_c","style","display","_c2","$RefreshReg$"],"sources":["/Users/shreyasingh/Downloads/frontend_changes_telehealth/frontend/src/components/doctor_dashboard/doctor_dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n    getUserMe, \n    createChatRoom, \n    viewMyChats, \n  addPatientVitals,\n    API_BASE_URL\n} from '../../services/api'; // Adjust the path as necessary\nimport './doctor_dashboard.css';\n\nconst DoctorDashboard = () => {\n    const [user, setUser] = useState({ name: 'Loading...', email: '' });\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n    const [isChatsModalOpen, setIsChatsModalOpen] = useState(false);\n    const [isVitalsModalOpen, setIsVitalsModalOpen] = useState(false);\n    const [chatRooms, setChatRooms] = useState([]);\n    const [roomName, setRoomName] = useState('');\n    const [participants, setParticipants] = useState('');\n    const [vitalEmail, setVitalEmail] = useState('');\n    const [vitalBP, setVitalBP] = useState('');\n    const navigate = useNavigate();\n\n    const loadUser = useCallback(async () => {\n        const token = sessionStorage.getItem(\"token\");\n        if (!token) {\n            navigate(\"/login\");\n            return;\n        }\n        try {\n            const userData = await getUserMe(token);\n            sessionStorage.setItem(\"user_id\", userData.id);\n            setUser(userData);\n\n            // Redirect if not a doctor\n            if (userData.role !== \"doctor\") {\n                navigate(`/${userData.role}-dashboard`); // Redirect to appropriate dashboard\n            }\n\n        } catch (err) {\n            console.error(\"User loading failed:\", err);\n            sessionStorage.clear();\n            alert(\"Please login again\");\n            navigate(\"/login\");\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        loadUser();\n    }, [loadUser]);\n\n    const logout = () => {\n        sessionStorage.clear();\n        navigate(\"/login\");\n    };\n\n    const handleCreateChatRoom = async () => {\n        if (!roomName.trim() || !participants.trim()) {\n            alert(\"Fill room name and participant IDs.\");\n            return;\n        }\n\n        const participant_ids = participants\n            .split(\",\")\n            .map(s => Number(s.trim()))\n            .filter(n => !isNaN(n) && n > 0);\n        \n        if (participant_ids.length === 0) {\n             alert(\"Enter valid participant IDs (e.g., 2,5,7).\");\n             return;\n        }\n\n        try {\n            const data = await createChatRoom(roomName, participant_ids);\n            navigate(`/chat?chatId=${data.id}`); // Navigate to the new chat room\n            setIsCreateModalOpen(false);\n        } catch (err) {\n            alert(`Failed to create chat room: ${err.message}`);\n        }\n    };\n\n    const handleViewMyChats = async () => {\n        try {\n            const chats = await viewMyChats();\n            setChatRooms(chats);\n            setIsChatsModalOpen(true);\n        } catch (err) {\n            alert(`Failed to load chat rooms: ${err.message}`);\n        }\n    };\n\n    const handleOpenChat = (chatId) => {\n        navigate(`/chat?chatId=${chatId}`);\n    };\n\n    const handleAddVitals = async () => {\n        const bp = parseInt(vitalBP.trim());\n        if (!vitalEmail.trim() || isNaN(bp)) {\n            alert(\"Fill all fields correctly.\");\n            return;\n        }\n\n        try {\n            await addPatientVitals(vitalEmail, bp);\n            alert(\"Vitals added successfully!\");\n            setIsVitalsModalOpen(false);\n            setVitalEmail('');\n            setVitalBP('');\n        } catch (err) {\n            alert(`Error adding vitals: ${err.message}`);\n        }\n    };\n\n    // Helper for navigation to external page/route\n    const handleViewAppointments = () => {\n        navigate(\"/doctor-appointments\"); // Assuming you have a route for this\n        // OR window.location.href = \"doctor_appointment.html\"; if not using routing\n    }\n\n\n    return (\n        <div className='doctor-dashboard'>\n            <header>\n                <h2>Doctor Dashboard</h2>\n            </header>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <h3>Welcome, <span id=\"userName\">{user.name}</span></h3>\n                    <p>Email: <span id=\"userEmail\">{user.email}</span></p>\n                </div>\n\n                {/* Chat Section */}\n                <div className=\"card\" id=\"createSection\">\n                    <h3>Chat</h3>\n                    <button onClick={() => setIsCreateModalOpen(true)}>Create Chat Room</button>\n                    <button onClick={handleViewMyChats}>View My Chats</button>\n                </div>\n\n                {/* Appointment Section */}\n                <div className=\"card\">\n                    <h3>Appointment</h3>\n                    <button onClick={handleViewAppointments}>View Appointments</button>\n                </div>\n\n                {/* Vitals Section */}\n                <div className=\"card\">\n                    <h3>Add Patient Vitals</h3>\n                    <button onClick={() => setIsVitalsModalOpen(true)}>Add Vitals</button>\n                </div>\n\n                {/* Logout Section */}\n                <div className=\"card\">\n                    <button onClick={logout}>Logout</button>\n                </div>\n            </div>\n\n            {/* Create Chat Room Modal */}\n            <Modal isOpen={isCreateModalOpen} onClose={() => setIsCreateModalOpen(false)} title=\"Create Chat Room\">\n                <label>Room Name:</label>\n                <input type=\"text\" value={roomName} onChange={(e) => setRoomName(e.target.value)} placeholder=\"Enter chat room name\" />\n\n                <label>Participant IDs (comma separated):</label>\n                <input type=\"text\" value={participants} onChange={(e) => setParticipants(e.target.value)} placeholder=\"e.g. 2,5,7\" />\n\n                <div className=\"modal-actions\">\n                    <button onClick={handleCreateChatRoom}>Create</button>\n                    <button className=\"cancel-btn\" onClick={() => setIsCreateModalOpen(false)}>Cancel</button>\n                </div>\n            </Modal>\n\n            {/* Chat Rooms Modal */}\n            <Modal isOpen={isChatsModalOpen} onClose={() => setIsChatsModalOpen(false)} title=\"Your Chat Rooms\">\n                <div id=\"chatRooms\">\n                    {chatRooms.length === 0 ? (\n                        <p>No chat rooms found.</p>\n                    ) : (\n                        chatRooms.map(c => (\n                            <div key={c.id} className=\"chat-card\">\n                                <h3>{c.name || \"Chat Room\"}</h3>\n                                <p>Room ID: {c.id}</p>\n                                <button onClick={() => handleOpenChat(c.id)}>Open</button>\n                            </div>\n                        ))\n                    )}\n                </div>\n            </Modal>\n\n            {/* Vitals Modal */}\n            <Modal isOpen={isVitalsModalOpen} onClose={() => setIsVitalsModalOpen(false)} title=\"Add Patient Vitals\">\n                <label>Patient Email:</label>\n                <input type=\"email\" value={vitalEmail} onChange={(e) => setVitalEmail(e.target.value)} placeholder=\"patient@example.com\" />\n\n                <label>Blood Pressure (BP):</label>\n                <input type=\"number\" value={vitalBP} onChange={(e) => setVitalBP(e.target.value)} placeholder=\"Enter BP value\" />\n\n                <div className=\"modal-actions\">\n                    <button onClick={handleAddVitals}>Submit</button>\n                    <button className=\"cancel-btn\" onClick={() => setIsVitalsModalOpen(false)}>Cancel</button>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\n// Simple Modal component for reusability\nconst Modal = ({ isOpen, onClose, title, children }) => {\n    if (!isOpen) return null;\n    return (\n        <div className=\"modal\" style={{ display: 'block' }}>\n            <div className=\"modal-content\">\n                <span className=\"close\" onClick={onClose}>&times;</span>\n                <h2>{title}</h2>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default DoctorDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}