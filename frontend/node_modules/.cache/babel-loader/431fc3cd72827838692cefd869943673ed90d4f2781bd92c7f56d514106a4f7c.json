{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasingh/Downloads/telehealth/frontend/src/components/doctor_appointment/doctor_appointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { getAllAppointments, respondToAppointment } from '../../services/api'; // Adjust path\nimport './doctor_appointment.css';\n\n// Component for the Appointment Modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentModal = ({\n  isOpen,\n  onClose,\n  event,\n  onRespond\n}) => {\n  if (!isOpen || !event) return null;\n\n  // Helper to format Date objects\n  const formatDateTime = date => date ? new Date(date).toLocaleString() : 'N/A';\n\n  // Access properties from event object\n  const appointmentId = event.id;\n  const patientName = event.title;\n  const start = formatDateTime(event.start);\n  const end = formatDateTime(event.end);\n  const status = event.extendedProps.status;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"appointmentModal\",\n    className: \"modal\",\n    style: {\n      display: 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: \"Appointment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"modal-patient\",\n            children: patientName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"modal-start\",\n            children: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"modal-end\",\n            children: end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 24\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"modal-status\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-accept\",\n          onClick: () => onRespond(\"accepted\", appointmentId),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-reject\",\n          onClick: () => onRespond(\"rejected\", appointmentId),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-cancel\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = AppointmentModal;\nconst DoctorAppointment = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const loadAppointments = useCallback(async () => {\n    const token = sessionStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const rawEvents = await getAllAppointments();\n\n      // Map raw data to FullCalendar event format, adding color based on status\n      const formattedEvents = rawEvents.map(ev => {\n        let color;\n        if (ev.status === \"accepted\") {\n          color = \"green\";\n        } else if (ev.status === \"rejected\") {\n          color = \"red\";\n        } else {\n          color = \"blue\"; // pending\n        }\n        return {\n          id: ev.id,\n          title: ev.title,\n          // Patient Name\n          start: ev.start,\n          // ISO string\n          end: ev.end,\n          // ISO string\n          extendedProps: {\n            status: ev.status\n          },\n          color: color\n        };\n      });\n      setEvents(formattedEvents);\n    } catch (error) {\n      console.error(\"Failed to load appointments:\", error);\n      alert(`Failed to load appointments: ${error.message}`);\n      // Optionally redirect on severe error\n    }\n  }, [navigate]);\n  useEffect(() => {\n    loadAppointments();\n  }, [loadAppointments]);\n  const handleEventClick = clickInfo => {\n    // FullCalendar passes the Event object in clickInfo.event\n    setSelectedEvent(clickInfo.event);\n    setIsModalOpen(true);\n  };\n  const handleRespond = async (action, appointmentId) => {\n    try {\n      // Note: The action must be lowercase as expected by the backend schema\n      const backendAction = action.toLowerCase();\n      const data = await respondToAppointment(appointmentId, backendAction);\n      alert(`Appointment ${data.status}`); // Assuming backend returns {status: \"updated successfully\"}\n      setIsModalOpen(false);\n\n      // Reload appointments to update the calendar view\n      loadAppointments();\n    } catch (error) {\n      alert(`Failed to update appointment: ${error.message}`);\n      console.error(\"Response failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: events,\n        eventClick: handleEventClick,\n        height: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppointmentModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      event: selectedEvent,\n      onRespond: handleRespond\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorAppointment, \"QHOx/LjtF3Vq5YOwm/FONR3ZCSk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = DoctorAppointment;\nexport default DoctorAppointment;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppointmentModal\");\n$RefreshReg$(_c2, \"DoctorAppointment\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","FullCalendar","dayGridPlugin","getAllAppointments","respondToAppointment","jsxDEV","_jsxDEV","AppointmentModal","isOpen","onClose","event","onRespond","formatDateTime","date","Date","toLocaleString","appointmentId","id","patientName","title","start","end","status","extendedProps","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","DoctorAppointment","_s","events","setEvents","selectedEvent","setSelectedEvent","isModalOpen","setIsModalOpen","navigate","loadAppointments","token","sessionStorage","getItem","rawEvents","formattedEvents","map","ev","color","error","console","alert","message","handleEventClick","clickInfo","handleRespond","action","backendAction","toLowerCase","data","plugins","initialView","eventClick","height","_c2","$RefreshReg$"],"sources":["/Users/shreyasingh/Downloads/telehealth/frontend/src/components/doctor_appointment/doctor_appointment.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { getAllAppointments, respondToAppointment } from '../../services/api'; // Adjust path\nimport './doctor_appointment.css';\n\n// Component for the Appointment Modal\nconst AppointmentModal = ({ isOpen, onClose, event, onRespond }) => {\n    if (!isOpen || !event) return null;\n\n    // Helper to format Date objects\n    const formatDateTime = (date) => \n        date ? new Date(date).toLocaleString() : 'N/A';\n\n    // Access properties from event object\n    const appointmentId = event.id;\n    const patientName = event.title;\n    const start = formatDateTime(event.start);\n    const end = formatDateTime(event.end);\n    const status = event.extendedProps.status;\n\n    return (\n        <div id=\"appointmentModal\" className=\"modal\" style={{ display: 'block' }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">Appointment Details</div>\n                <div className=\"modal-body\">\n                    <p><strong>Patient:</strong> <span id=\"modal-patient\">{patientName}</span></p>\n                    <p><strong>Start:</strong> <span id=\"modal-start\">{start}</span></p>\n                    <p><strong>End:</strong> <span id=\"modal-end\">{end}</span></p>\n                    <p><strong>Status:</strong> <span id=\"modal-status\">{status}</span></p>\n                </div>\n                <div className=\"modal-footer\">\n                    <button \n                        className=\"btn btn-accept\" \n                        onClick={() => onRespond(\"accepted\", appointmentId)}>Accept</button>\n                    <button \n                        className=\"btn btn-reject\" \n                        onClick={() => onRespond(\"rejected\", appointmentId)}>Reject</button>\n                    <button \n                        className=\"btn btn-cancel\" \n                        onClick={onClose}>Close</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst DoctorAppointment = () => {\n    const [events, setEvents] = useState([]);\n    const [selectedEvent, setSelectedEvent] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const navigate = useNavigate();\n\n    const loadAppointments = useCallback(async () => {\n        const token = sessionStorage.getItem(\"token\");\n        if (!token) {\n            navigate(\"/login\");\n            return;\n        }\n\n        try {\n            const rawEvents = await getAllAppointments();\n            \n            // Map raw data to FullCalendar event format, adding color based on status\n            const formattedEvents = rawEvents.map(ev => {\n                let color;\n                if (ev.status === \"accepted\") {\n                    color = \"green\";\n                } else if (ev.status === \"rejected\") {\n                    color = \"red\";\n                } else {\n                    color = \"blue\"; // pending\n                }\n\n                return {\n                    id: ev.id,\n                    title: ev.title, // Patient Name\n                    start: ev.start, // ISO string\n                    end: ev.end,     // ISO string\n                    extendedProps: { status: ev.status },\n                    color: color\n                };\n            });\n            setEvents(formattedEvents);\n\n        } catch (error) {\n            console.error(\"Failed to load appointments:\", error);\n            alert(`Failed to load appointments: ${error.message}`);\n            // Optionally redirect on severe error\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        loadAppointments();\n    }, [loadAppointments]);\n\n\n    const handleEventClick = (clickInfo) => {\n        // FullCalendar passes the Event object in clickInfo.event\n        setSelectedEvent(clickInfo.event);\n        setIsModalOpen(true);\n    };\n\n    const handleRespond = async (action, appointmentId) => {\n        try {\n            // Note: The action must be lowercase as expected by the backend schema\n            const backendAction = action.toLowerCase(); \n            const data = await respondToAppointment(appointmentId, backendAction);\n            alert(`Appointment ${data.status}`); // Assuming backend returns {status: \"updated successfully\"}\n            setIsModalOpen(false);\n            \n            // Reload appointments to update the calendar view\n            loadAppointments(); \n\n        } catch (error) {\n            alert(`Failed to update appointment: ${error.message}`);\n            console.error(\"Response failed:\", error);\n        }\n    };\n\n    return (\n        <div className=\"appointment-page\">\n            <header>\n                <h2>Your Appointments</h2>\n            </header>\n            <div id=\"calendar-container\">\n                <FullCalendar\n                    plugins={[dayGridPlugin]}\n                    initialView='dayGridMonth'\n                    events={events}\n                    eventClick={handleEventClick}\n                    height=\"auto\"\n                />\n            </div>\n            \n            <AppointmentModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                event={selectedEvent}\n                onRespond={handleRespond}\n            />\n        </div>\n    );\n};\n\nexport default DoctorAppointment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}