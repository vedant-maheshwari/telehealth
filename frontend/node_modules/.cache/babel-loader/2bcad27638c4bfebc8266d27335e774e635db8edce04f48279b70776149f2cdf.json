{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasingh/Downloads/frontend_changes_telehealth/frontend/src/components/create_appointment/create_appointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './create_appointment.css';\nimport { getAvailableSlots, reserveSlot, confirmSlot, cancelSlot, setupWebSocket } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_DOCTOR_ID = 3;\nconst DEFAULT_USER_ID = 1;\n\n/**\n * Utility to get today's date in YYYY-MM-DD format.\n */\nconst getTodayDateString = () => {\n  return new Date().toISOString().split('T')[0];\n};\nconst AppointmentBooking = () => {\n  _s();\n  // --- State Variables ---\n  const [doctorId, setDoctorId] = useState(DEFAULT_DOCTOR_ID);\n  const [date, setDate] = useState(getTodayDateString());\n  const [userId, setUserId] = useState(DEFAULT_USER_ID);\n  const [slots, setSlots] = useState([]); // List of available time strings\n  const [reservedSlots, setReservedSlots] = useState({}); // { 'YYYY-MM-DDT...': true }\n  const [selectedTime, setSelectedTime] = useState(null); // The currently selected time string\n  const [ownReservedKey, setOwnReservedKey] = useState(null); // Key for the slot reserved by the current user: 'DOCTOR_ID:DATETIME'\n  const [status, setStatus] = useState({\n    message: '',\n    type: null\n  }); // { message: '...', type: 'success' | 'error' | null }\n  const [wsStatus, setWsStatus] = useState('Disconnected');\n  const [showModal, setShowModal] = useState(false);\n\n  // Use a ref to hold the WebSocket connection so it persists across renders\n  const wsRef = useRef(null);\n\n  // --- Status and Utility Functions ---\n\n  /**\n   * Displays a status message temporarily.\n   */\n  const showStatus = useCallback((message, isError = false) => {\n    setStatus({\n      message,\n      type: isError ? 'error' : 'success'\n    });\n    setTimeout(() => {\n      setStatus({\n        message: '',\n        type: null\n      });\n    }, 5000);\n  }, []);\n\n  // --- Core Logic Functions ---\n\n  /**\n   * Updates the slots state based on a new WebSocket message.\n   */\n  const handleWebSocketMessage = useCallback(data => {\n    const slotTime = data.slot_time.substring(11, 19); // \"HH:MM:SS\"\n    const key = `${doctorId}:${data.slot_time}`;\n    setReservedSlots(prev => {\n      const newReserved = {\n        ...prev\n      };\n      if (data.action === 'reserved') {\n        newReserved[key] = true;\n        showStatus(`Slot ${slotTime} was reserved by another user`);\n        // If another user reserved the selected slot, clear selection\n        if (selectedTime === slotTime && ownReservedKey !== key) {\n          setSelectedTime(null);\n        }\n      } else if (data.action === 'freed') {\n        delete newReserved[key];\n        showStatus(`Slot ${slotTime} is now available`);\n      }\n      return newReserved;\n    });\n  }, [doctorId, ownReservedKey, selectedTime, showStatus]);\n\n  /**\n   * Disconnects the old WS and connects a new one.\n   */\n  const connectWebSocket = useCallback(newDoctorId => {\n    if (wsRef.current) {\n      wsRef.current.close();\n    }\n    // Only connect if we have a valid doctorId\n    if (newDoctorId) {\n      wsRef.current = setupWebSocket(newDoctorId, handleWebSocketMessage, setWsStatus);\n    }\n  }, [handleWebSocketMessage]);\n\n  /**\n   * Fetches available slots from the backend.\n   */\n  const handleLoadSlots = async () => {\n    if (!doctorId || !date || !userId) {\n      showStatus('Please fill in all fields', true);\n      return;\n    }\n    try {\n      // 1. Load available slots\n      const availableTimes = await getAvailableSlots(doctorId, date);\n\n      // 2. Clear previous state\n      setSlots(availableTimes);\n      setReservedSlots({});\n      setSelectedTime(null);\n      setOwnReservedKey(null);\n      setShowModal(false);\n\n      // 3. Setup WebSocket for real-time updates\n      // connectWebSocket(doctorId);\n\n      showStatus(`Loaded ${availableTimes.length} available slots`);\n    } catch (error) {\n      console.error('Failed to load slots:', error);\n      setSlots([]);\n    }\n  };\n\n  /**\n   * Handles user click on a time slot.\n   */\n  const handleSlotClick = time => {\n    const key = `${doctorId}:${date}T${time}`;\n\n    // 1. Block if slot reserved by others\n    if (reservedSlots[key] && ownReservedKey !== key) {\n      showStatus('This slot is already reserved by another user', true);\n      return;\n    }\n\n    // 2. If slot is reserved by self, open modal\n    if (ownReservedKey === key) {\n      setShowModal(true);\n      return;\n    }\n\n    // 3. Otherwise, select the slot\n    setSelectedTime(time === selectedTime ? null : time);\n  };\n\n  /**\n   * Sends a request to reserve the selected slot.\n   */\n  const handleReserveSlot = async () => {\n    if (!selectedTime) {\n      showStatus('Please select a slot first', true);\n      return;\n    }\n    const appointmentDateTime = `${date}T${selectedTime}`;\n    try {\n      const result = await reserveSlot(userId, doctorId, appointmentDateTime, showStatus);\n      const reservedKey = `${doctorId}:${appointmentDateTime}`;\n      setOwnReservedKey(reservedKey);\n      setReservedSlots(prev => ({\n        ...prev,\n        [reservedKey]: true\n      }));\n      showStatus(`Slot reserved! Expires in ${result.expires_in} seconds`);\n\n      // Mark slot as reserved by self and open modal\n      setSelectedTime(null);\n      setShowModal(true);\n    } catch (error) {\n      console.error('Failed to reserve slot:', error);\n    }\n  };\n\n  /**\n   * Sends a request to confirm the reserved slot.\n   */\n  const handleConfirmSlot = async () => {\n    if (!ownReservedKey) {\n      showStatus('No reserved slot to confirm', true);\n      return;\n    }\n    try {\n      // ownReservedKey is 'DOCTOR_ID:DATETIME', split it up\n      const [docId, dateTime] = ownReservedKey.split(':');\n      await confirmSlot(userId, docId, dateTime, showStatus);\n      showStatus('Booking confirmed successfully! 🎉');\n      setOwnReservedKey(null);\n      setShowModal(false);\n      // Reload slots after confirmation to reflect permanent booking status (optional, but good for cleanliness)\n      setTimeout(handleLoadSlots, 1000);\n    } catch (error) {\n      console.error('Failed to confirm slot:', error);\n    }\n  };\n\n  /**\n   * Sends a request to cancel the reserved slot.\n   */\n  const handleCancelSlot = async () => {\n    if (!ownReservedKey) {\n      showStatus('No reserved slot to cancel', true);\n      return;\n    }\n    if (!window.confirm('Are you sure you want to cancel this reservation?')) return;\n    try {\n      // ownReservedKey is 'DOCTOR_ID:DATETIME', split it up\n      const [docId, dateTime] = ownReservedKey.split(':');\n      await cancelSlot(userId, docId, dateTime, showStatus);\n      showStatus('Reservation cancelled successfully');\n      setOwnReservedKey(null);\n      setShowModal(false);\n      // Reload slots to reflect the slot is now free\n      setTimeout(handleLoadSlots, 1000);\n    } catch (error) {\n      console.error('Failed to cancel slot:', error);\n    }\n  };\n\n  // --- Effects and Cleanup ---\n\n  // Cleanup effect: Close WebSocket when the component unmounts\n  useEffect(() => {\n    return () => {\n      // if (wsRef.current) {\n      //   wsRef.current.close();\n      // }\n    };\n  }, []);\n\n  // --- Render Functions ---\n\n  const wsStatusClass = wsStatus === 'Connected' ? 'connected' : 'disconnected';\n  const selectedSlotTime = ownReservedKey ? ownReservedKey.split('T')[1].substring(0, 5) : selectedTime;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"hero-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-icon\",\n            children: \"\\uD83E\\uDE7A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), \"Book Your Appointment\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hero-subtitle\",\n          children: \"Schedule your consultation with our expert doctors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-decoration\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-icon\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text\",\n            children: \"Easy Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floating-card delayed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-icon\",\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text\",\n            children: \"Real-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-form-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Appointment Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `websocket-indicator ${wsStatusClass}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: wsStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"doctorIdInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label-icon\",\n                children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), \"Doctor ID\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"doctorIdInput\",\n                type: \"number\",\n                value: doctorId,\n                onChange: e => setDoctorId(parseInt(e.target.value, 10) || ''),\n                placeholder: \"Enter doctor ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dateInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label-icon\",\n                children: \"\\uD83D\\uDCC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), \"Appointment Date\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"dateInput\",\n                type: \"date\",\n                value: date,\n                onChange: e => setDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userIdInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label-icon\",\n                children: \"\\uD83D\\uDC64\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), \"User ID\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"userIdInput\",\n                type: \"number\",\n                value: userId,\n                onChange: e => setUserId(parseInt(e.target.value, 10) || ''),\n                placeholder: \"Enter user ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"load-slots-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"load-slots-btn\",\n            onClick: handleLoadSlots,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), \"Load Available Slots\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slots-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-icon\",\n              children: \"\\u23F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), \"Available Time Slots\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), slots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slots-count\",\n            children: [slots.length, \" slots available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-container\",\n          id: \"slotsContainer\",\n          children: slots.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: \"\\uD83D\\uDCCB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click \\\"Load Available Slots\\\" to see available appointments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slots-grid\",\n            children: slots.map(time => {\n              const key = `${doctorId}:${date}T${time}`;\n              const isReserved = !!reservedSlots[key];\n              const isSelected = selectedTime === time;\n              const isOwnReserved = ownReservedKey === key;\n              let className = 'time-slot';\n              if (isReserved && !isOwnReserved) className += ' reserved';\n              if (isSelected) className += ' selected';\n              if (isOwnReserved) className += ' own-reserved';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: className,\n                \"data-time\": time,\n                \"data-key\": key,\n                onClick: () => handleSlotClick(time),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slot-time\",\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this), isOwnReserved && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slot-badge\",\n                  children: \"Your Hold\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 41\n                }, this), isReserved && !isOwnReserved && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slot-badge reserved-badge\",\n                  children: \"Reserved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 56\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slot-hover-effect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, time, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn primary\",\n          onClick: handleReserveSlot,\n          disabled: !selectedTime || !!ownReservedKey,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDCCC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), \"Reserve Selected Slot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn secondary\",\n          onClick: () => setShowModal(true),\n          disabled: !ownReservedKey,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\u2705\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), \"Manage Reserved Slot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-toast ${status.type} ${status.message ? 'show' : ''}`,\n      \"aria-live\": \"polite\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-icon\",\n        children: status.type === 'success' ? '✅' : '⚠️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-message\",\n        children: status.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Manage Your Reservation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-icon\",\n                children: \"\\u23F0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-text\",\n                id: \"modalTime\",\n                children: selectedSlotTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your slot is reserved. What would you like to do?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn confirm\",\n            onClick: handleConfirmSlot,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), \"Confirm Booking\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn cancel\",\n            onClick: handleCancelSlot,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), \"Cancel Reservation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn neutral\",\n            onClick: () => setShowModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-decoration decoration-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-decoration decoration-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-decoration decoration-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentBooking, \"qqlk9naLU+3I3Xd0sUkMszSlaTA=\");\n_c = AppointmentBooking;\nexport default AppointmentBooking;\nvar _c;\n$RefreshReg$(_c, \"AppointmentBooking\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","getAvailableSlots","reserveSlot","confirmSlot","cancelSlot","setupWebSocket","jsxDEV","_jsxDEV","DEFAULT_DOCTOR_ID","DEFAULT_USER_ID","getTodayDateString","Date","toISOString","split","AppointmentBooking","_s","doctorId","setDoctorId","date","setDate","userId","setUserId","slots","setSlots","reservedSlots","setReservedSlots","selectedTime","setSelectedTime","ownReservedKey","setOwnReservedKey","status","setStatus","message","type","wsStatus","setWsStatus","showModal","setShowModal","wsRef","showStatus","isError","setTimeout","handleWebSocketMessage","data","slotTime","slot_time","substring","key","prev","newReserved","action","connectWebSocket","newDoctorId","current","close","handleLoadSlots","availableTimes","length","error","console","handleSlotClick","time","handleReserveSlot","appointmentDateTime","result","reservedKey","expires_in","handleConfirmSlot","docId","dateTime","handleCancelSlot","window","confirm","wsStatusClass","selectedSlotTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","parseInt","target","placeholder","onClick","map","isReserved","isSelected","isOwnReserved","disabled","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/shreyasingh/Downloads/frontend_changes_telehealth/frontend/src/components/create_appointment/create_appointment.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './create_appointment.css';\nimport {\n  getAvailableSlots,\n  reserveSlot,\n  confirmSlot,\n  cancelSlot,\n  setupWebSocket,\n} from '../../services/api';\n\nconst DEFAULT_DOCTOR_ID = 3;\nconst DEFAULT_USER_ID = 1;\n\n/**\n * Utility to get today's date in YYYY-MM-DD format.\n */\nconst getTodayDateString = () => {\n  return new Date().toISOString().split('T')[0];\n};\n\nconst AppointmentBooking = () => {\n  // --- State Variables ---\n  const [doctorId, setDoctorId] = useState(DEFAULT_DOCTOR_ID);\n  const [date, setDate] = useState(getTodayDateString());\n  const [userId, setUserId] = useState(DEFAULT_USER_ID);\n  const [slots, setSlots] = useState([]); // List of available time strings\n  const [reservedSlots, setReservedSlots] = useState({}); // { 'YYYY-MM-DDT...': true }\n  const [selectedTime, setSelectedTime] = useState(null); // The currently selected time string\n  const [ownReservedKey, setOwnReservedKey] = useState(null); // Key for the slot reserved by the current user: 'DOCTOR_ID:DATETIME'\n  const [status, setStatus] = useState({ message: '', type: null }); // { message: '...', type: 'success' | 'error' | null }\n  const [wsStatus, setWsStatus] = useState('Disconnected');\n  const [showModal, setShowModal] = useState(false);\n\n  // Use a ref to hold the WebSocket connection so it persists across renders\n  const wsRef = useRef(null);\n\n  // --- Status and Utility Functions ---\n\n  /**\n   * Displays a status message temporarily.\n   */\n  const showStatus = useCallback((message, isError = false) => {\n    setStatus({ message, type: isError ? 'error' : 'success' });\n    setTimeout(() => {\n      setStatus({ message: '', type: null });\n    }, 5000);\n  }, []);\n\n  // --- Core Logic Functions ---\n\n  /**\n   * Updates the slots state based on a new WebSocket message.\n   */\n  const handleWebSocketMessage = useCallback((data) => {\n    const slotTime = data.slot_time.substring(11, 19); // \"HH:MM:SS\"\n    const key = `${doctorId}:${data.slot_time}`;\n\n    setReservedSlots((prev) => {\n      const newReserved = { ...prev };\n      if (data.action === 'reserved') {\n        newReserved[key] = true;\n        showStatus(`Slot ${slotTime} was reserved by another user`);\n        // If another user reserved the selected slot, clear selection\n        if (selectedTime === slotTime && ownReservedKey !== key) {\n          setSelectedTime(null);\n        }\n      } else if (data.action === 'freed') {\n        delete newReserved[key];\n        showStatus(`Slot ${slotTime} is now available`);\n      }\n      return newReserved;\n    });\n  }, [doctorId, ownReservedKey, selectedTime, showStatus]);\n\n  /**\n   * Disconnects the old WS and connects a new one.\n   */\n  const connectWebSocket = useCallback((newDoctorId) => {\n    if (wsRef.current) {\n      wsRef.current.close();\n    }\n    // Only connect if we have a valid doctorId\n    if (newDoctorId) {\n      wsRef.current = setupWebSocket(newDoctorId, handleWebSocketMessage, setWsStatus);\n    }\n  }, [handleWebSocketMessage]);\n\n  /**\n   * Fetches available slots from the backend.\n   */\n  const handleLoadSlots = async () => {\n    if (!doctorId || !date || !userId) {\n      showStatus('Please fill in all fields', true);\n      return;\n    }\n\n    try {\n      // 1. Load available slots\n      const availableTimes = await getAvailableSlots(doctorId, date);\n\n      // 2. Clear previous state\n      setSlots(availableTimes);\n      setReservedSlots({});\n      setSelectedTime(null);\n      setOwnReservedKey(null);\n      setShowModal(false);\n\n      // 3. Setup WebSocket for real-time updates\n      // connectWebSocket(doctorId);\n\n      showStatus(`Loaded ${availableTimes.length} available slots`);\n    } catch (error) {\n      console.error('Failed to load slots:', error);\n      setSlots([]);\n    }\n  };\n\n  /**\n   * Handles user click on a time slot.\n   */\n  const handleSlotClick = (time) => {\n    const key = `${doctorId}:${date}T${time}`;\n\n    // 1. Block if slot reserved by others\n    if (reservedSlots[key] && ownReservedKey !== key) {\n      showStatus('This slot is already reserved by another user', true);\n      return;\n    }\n\n    // 2. If slot is reserved by self, open modal\n    if (ownReservedKey === key) {\n      setShowModal(true);\n      return;\n    }\n\n    // 3. Otherwise, select the slot\n    setSelectedTime(time === selectedTime ? null : time);\n  };\n\n  /**\n   * Sends a request to reserve the selected slot.\n   */\n  const handleReserveSlot = async () => {\n    if (!selectedTime) {\n      showStatus('Please select a slot first', true);\n      return;\n    }\n\n    const appointmentDateTime = `${date}T${selectedTime}`;\n\n    try {\n      const result = await reserveSlot(userId, doctorId, appointmentDateTime, showStatus);\n\n      const reservedKey = `${doctorId}:${appointmentDateTime}`;\n      setOwnReservedKey(reservedKey);\n      setReservedSlots(prev => ({ ...prev, [reservedKey]: true }));\n      showStatus(`Slot reserved! Expires in ${result.expires_in} seconds`);\n\n      // Mark slot as reserved by self and open modal\n      setSelectedTime(null);\n      setShowModal(true);\n    } catch (error) {\n      console.error('Failed to reserve slot:', error);\n    }\n  };\n\n  /**\n   * Sends a request to confirm the reserved slot.\n   */\n  const handleConfirmSlot = async () => {\n    if (!ownReservedKey) {\n      showStatus('No reserved slot to confirm', true);\n      return;\n    }\n\n    try {\n      // ownReservedKey is 'DOCTOR_ID:DATETIME', split it up\n      const [docId, dateTime] = ownReservedKey.split(':');\n      await confirmSlot(userId, docId, dateTime, showStatus);\n\n      showStatus('Booking confirmed successfully! 🎉');\n      setOwnReservedKey(null);\n      setShowModal(false);\n      // Reload slots after confirmation to reflect permanent booking status (optional, but good for cleanliness)\n      setTimeout(handleLoadSlots, 1000);\n    } catch (error) {\n      console.error('Failed to confirm slot:', error);\n    }\n  };\n\n  /**\n   * Sends a request to cancel the reserved slot.\n   */\n  const handleCancelSlot = async () => {\n    if (!ownReservedKey) {\n      showStatus('No reserved slot to cancel', true);\n      return;\n    }\n\n    if (!window.confirm('Are you sure you want to cancel this reservation?')) return;\n\n    try {\n      // ownReservedKey is 'DOCTOR_ID:DATETIME', split it up\n      const [docId, dateTime] = ownReservedKey.split(':');\n      await cancelSlot(userId, docId, dateTime, showStatus);\n\n      showStatus('Reservation cancelled successfully');\n      setOwnReservedKey(null);\n      setShowModal(false);\n      // Reload slots to reflect the slot is now free\n      setTimeout(handleLoadSlots, 1000);\n    } catch (error) {\n      console.error('Failed to cancel slot:', error);\n    }\n  };\n\n  // --- Effects and Cleanup ---\n\n  // Cleanup effect: Close WebSocket when the component unmounts\n  useEffect(() => {\n    return () => {\n      // if (wsRef.current) {\n      //   wsRef.current.close();\n      // }\n    };\n  }, []);\n\n  // --- Render Functions ---\n\n  const wsStatusClass = wsStatus === 'Connected' ? 'connected' : 'disconnected';\n  const selectedSlotTime = ownReservedKey ? ownReservedKey.split('T')[1].substring(0, 5) : selectedTime;\n\n  return (\n    <div className=\"appointment-container\">\n      {/* Hero Section */}\n      <div className=\"hero-section\">\n        <div className=\"hero-content\">\n          <h1 className=\"hero-title\">\n            <span className=\"title-icon\">🩺</span>\n            Book Your Appointment\n          </h1>\n          <p className=\"hero-subtitle\">Schedule your consultation with our expert doctors</p>\n        </div>\n        <div className=\"hero-decoration\">\n          <div className=\"floating-card\">\n            <div className=\"card-icon\">📅</div>\n            <div className=\"card-text\">Easy Booking</div>\n          </div>\n          <div className=\"floating-card delayed\">\n            <div className=\"card-icon\">⚡</div>\n            <div className=\"card-text\">Real-time</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {/* Booking Form */}\n        <div className=\"booking-form-card\">\n          <div className=\"card-header\">\n            <h2>Appointment Details</h2>\n            <div className={`websocket-indicator ${wsStatusClass}`}>\n              <div className=\"status-dot\"></div>\n              <span>{wsStatus}</span>\n            </div>\n          </div>\n\n          <div className=\"form-grid\">\n            <div className=\"form-group\">\n              <label htmlFor=\"doctorIdInput\">\n                <span className=\"label-icon\">👨‍⚕️</span>\n                Doctor ID\n              </label>\n              <div className=\"input-wrapper\">\n                <input\n                  id=\"doctorIdInput\"\n                  type=\"number\"\n                  value={doctorId}\n                  onChange={(e) => setDoctorId(parseInt(e.target.value, 10) || '')}\n                  placeholder=\"Enter doctor ID\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"dateInput\">\n                <span className=\"label-icon\">📅</span>\n                Appointment Date\n              </label>\n              <div className=\"input-wrapper\">\n                <input\n                  id=\"dateInput\"\n                  type=\"date\"\n                  value={date}\n                  onChange={(e) => setDate(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"userIdInput\">\n                <span className=\"label-icon\">👤</span>\n                User ID\n              </label>\n              <div className=\"input-wrapper\">\n                <input\n                  id=\"userIdInput\"\n                  type=\"number\"\n                  value={userId}\n                  onChange={(e) => setUserId(parseInt(e.target.value, 10) || '')}\n                  placeholder=\"Enter user ID\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"load-slots-section\">\n            <button className=\"load-slots-btn\" onClick={handleLoadSlots}>\n              <span className=\"btn-icon\">🔄</span>\n              Load Available Slots\n            </button>\n          </div>\n        </div>\n\n        {/* Time Slots Section */}\n        <div className=\"slots-section\">\n          <div className=\"slots-header\">\n            <h3>\n              <span className=\"header-icon\">⏰</span>\n              Available Time Slots\n            </h3>\n            {slots.length > 0 && (\n              <div className=\"slots-count\">\n                {slots.length} slots available\n              </div>\n            )}\n          </div>\n\n          <div className=\"slots-container\" id=\"slotsContainer\">\n            {slots.length === 0 ? (\n              <div className=\"empty-state\">\n                <div className=\"empty-icon\">📋</div>\n                <p>Click \"Load Available Slots\" to see available appointments</p>\n              </div>\n            ) : (\n              <div className=\"slots-grid\">\n                {slots.map((time) => {\n                  const key = `${doctorId}:${date}T${time}`;\n                  const isReserved = !!reservedSlots[key];\n                  const isSelected = selectedTime === time;\n                  const isOwnReserved = ownReservedKey === key;\n                  \n                  let className = 'time-slot';\n                  if (isReserved && !isOwnReserved) className += ' reserved';\n                  if (isSelected) className += ' selected';\n                  if (isOwnReserved) className += ' own-reserved';\n\n                  return (\n                    <div\n                      key={time}\n                      className={className}\n                      data-time={time}\n                      data-key={key}\n                      onClick={() => handleSlotClick(time)}\n                    >\n                      <div className=\"slot-time\">{time}</div>\n                      {isOwnReserved && <div className=\"slot-badge\">Your Hold</div>}\n                      {isReserved && !isOwnReserved && <div className=\"slot-badge reserved-badge\">Reserved</div>}\n                      <div className=\"slot-hover-effect\"></div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"actions-section\">\n          <button \n            className=\"action-btn primary\"\n            onClick={handleReserveSlot} \n            disabled={!selectedTime || !!ownReservedKey}\n          >\n            <span className=\"btn-icon\">📌</span>\n            Reserve Selected Slot\n          </button>\n          \n          <button\n            className=\"action-btn secondary\"\n            onClick={() => setShowModal(true)}\n            disabled={!ownReservedKey}\n          >\n            <span className=\"btn-icon\">✅</span>\n            Manage Reserved Slot\n          </button>\n        </div>\n      </div>\n\n      {/* Status Toast */}\n      <div \n        className={`status-toast ${status.type} ${status.message ? 'show' : ''}`}\n        aria-live=\"polite\"\n      >\n        <div className=\"toast-icon\">\n          {status.type === 'success' ? '✅' : '⚠️'}\n        </div>\n        <div className=\"toast-message\">{status.message}</div>\n      </div>\n\n      {/* Confirmation Modal */}\n      {showModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Manage Your Reservation</h3>\n              <button className=\"modal-close\" onClick={() => setShowModal(false)}>\n                ×\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"reservation-info\">\n                <div className=\"time-display\">\n                  <span className=\"time-icon\">⏰</span>\n                  <span className=\"time-text\" id=\"modalTime\">{selectedSlotTime}</span>\n                </div>\n                <p>Your slot is reserved. What would you like to do?</p>\n              </div>\n            </div>\n\n            <div className=\"modal-actions\">\n              <button className=\"modal-btn confirm\" onClick={handleConfirmSlot}>\n                <span className=\"btn-icon\">✅</span>\n                Confirm Booking\n              </button>\n              <button className=\"modal-btn cancel\" onClick={handleCancelSlot}>\n                <span className=\"btn-icon\">❌</span>\n                Cancel Reservation\n              </button>\n              <button className=\"modal-btn neutral\" onClick={() => setShowModal(false)}>\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Background Decorations */}\n      <div className=\"bg-decoration decoration-1\"></div>\n      <div className=\"bg-decoration decoration-2\"></div>\n      <div className=\"bg-decoration decoration-3\"></div>\n    </div>\n  );\n};\n\nexport default AppointmentBooking;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,0BAA0B;AACjC,SACEC,iBAAiB,EACjBC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,cAAc,QACT,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,iBAAiB,GAAG,CAAC;AAC3B,MAAMC,eAAe,GAAG,CAAC;;AAEzB;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC;AAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAACW,iBAAiB,CAAC;EAC3D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAACa,kBAAkB,CAAC,CAAC,CAAC;EACtD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAACY,eAAe,CAAC;EACrD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC;IAAEmC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC,CAAC,CAAC;EACnE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,cAAc,CAAC;EACxD,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMyC,KAAK,GAAGtC,MAAM,CAAC,IAAI,CAAC;;EAE1B;;EAEA;AACF;AACA;EACE,MAAMuC,UAAU,GAAGxC,WAAW,CAAC,CAACiC,OAAO,EAAEQ,OAAO,GAAG,KAAK,KAAK;IAC3DT,SAAS,CAAC;MAAEC,OAAO;MAAEC,IAAI,EAAEO,OAAO,GAAG,OAAO,GAAG;IAAU,CAAC,CAAC;IAC3DC,UAAU,CAAC,MAAM;MACfV,SAAS,CAAC;QAAEC,OAAO,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;IACxC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;AACF;AACA;EACE,MAAMS,sBAAsB,GAAG3C,WAAW,CAAE4C,IAAI,IAAK;IACnD,MAAMC,QAAQ,GAAGD,IAAI,CAACE,SAAS,CAACC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACnD,MAAMC,GAAG,GAAG,GAAG/B,QAAQ,IAAI2B,IAAI,CAACE,SAAS,EAAE;IAE3CpB,gBAAgB,CAAEuB,IAAI,IAAK;MACzB,MAAMC,WAAW,GAAG;QAAE,GAAGD;MAAK,CAAC;MAC/B,IAAIL,IAAI,CAACO,MAAM,KAAK,UAAU,EAAE;QAC9BD,WAAW,CAACF,GAAG,CAAC,GAAG,IAAI;QACvBR,UAAU,CAAC,QAAQK,QAAQ,+BAA+B,CAAC;QAC3D;QACA,IAAIlB,YAAY,KAAKkB,QAAQ,IAAIhB,cAAc,KAAKmB,GAAG,EAAE;UACvDpB,eAAe,CAAC,IAAI,CAAC;QACvB;MACF,CAAC,MAAM,IAAIgB,IAAI,CAACO,MAAM,KAAK,OAAO,EAAE;QAClC,OAAOD,WAAW,CAACF,GAAG,CAAC;QACvBR,UAAU,CAAC,QAAQK,QAAQ,mBAAmB,CAAC;MACjD;MACA,OAAOK,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjC,QAAQ,EAAEY,cAAc,EAAEF,YAAY,EAAEa,UAAU,CAAC,CAAC;;EAExD;AACF;AACA;EACE,MAAMY,gBAAgB,GAAGpD,WAAW,CAAEqD,WAAW,IAAK;IACpD,IAAId,KAAK,CAACe,OAAO,EAAE;MACjBf,KAAK,CAACe,OAAO,CAACC,KAAK,CAAC,CAAC;IACvB;IACA;IACA,IAAIF,WAAW,EAAE;MACfd,KAAK,CAACe,OAAO,GAAGhD,cAAc,CAAC+C,WAAW,EAAEV,sBAAsB,EAAEP,WAAW,CAAC;IAClF;EACF,CAAC,EAAE,CAACO,sBAAsB,CAAC,CAAC;;EAE5B;AACF;AACA;EACE,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACvC,QAAQ,IAAI,CAACE,IAAI,IAAI,CAACE,MAAM,EAAE;MACjCmB,UAAU,CAAC,2BAA2B,EAAE,IAAI,CAAC;MAC7C;IACF;IAEA,IAAI;MACF;MACA,MAAMiB,cAAc,GAAG,MAAMvD,iBAAiB,CAACe,QAAQ,EAAEE,IAAI,CAAC;;MAE9D;MACAK,QAAQ,CAACiC,cAAc,CAAC;MACxB/B,gBAAgB,CAAC,CAAC,CAAC,CAAC;MACpBE,eAAe,CAAC,IAAI,CAAC;MACrBE,iBAAiB,CAAC,IAAI,CAAC;MACvBQ,YAAY,CAAC,KAAK,CAAC;;MAEnB;MACA;;MAEAE,UAAU,CAAC,UAAUiB,cAAc,CAACC,MAAM,kBAAkB,CAAC;IAC/D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CnC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMqC,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMd,GAAG,GAAG,GAAG/B,QAAQ,IAAIE,IAAI,IAAI2C,IAAI,EAAE;;IAEzC;IACA,IAAIrC,aAAa,CAACuB,GAAG,CAAC,IAAInB,cAAc,KAAKmB,GAAG,EAAE;MAChDR,UAAU,CAAC,+CAA+C,EAAE,IAAI,CAAC;MACjE;IACF;;IAEA;IACA,IAAIX,cAAc,KAAKmB,GAAG,EAAE;MAC1BV,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;;IAEA;IACAV,eAAe,CAACkC,IAAI,KAAKnC,YAAY,GAAG,IAAI,GAAGmC,IAAI,CAAC;EACtD,CAAC;;EAED;AACF;AACA;EACE,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACpC,YAAY,EAAE;MACjBa,UAAU,CAAC,4BAA4B,EAAE,IAAI,CAAC;MAC9C;IACF;IAEA,MAAMwB,mBAAmB,GAAG,GAAG7C,IAAI,IAAIQ,YAAY,EAAE;IAErD,IAAI;MACF,MAAMsC,MAAM,GAAG,MAAM9D,WAAW,CAACkB,MAAM,EAAEJ,QAAQ,EAAE+C,mBAAmB,EAAExB,UAAU,CAAC;MAEnF,MAAM0B,WAAW,GAAG,GAAGjD,QAAQ,IAAI+C,mBAAmB,EAAE;MACxDlC,iBAAiB,CAACoC,WAAW,CAAC;MAC9BxC,gBAAgB,CAACuB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACiB,WAAW,GAAG;MAAK,CAAC,CAAC,CAAC;MAC5D1B,UAAU,CAAC,6BAA6ByB,MAAM,CAACE,UAAU,UAAU,CAAC;;MAEpE;MACAvC,eAAe,CAAC,IAAI,CAAC;MACrBU,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACvC,cAAc,EAAE;MACnBW,UAAU,CAAC,6BAA6B,EAAE,IAAI,CAAC;MAC/C;IACF;IAEA,IAAI;MACF;MACA,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,cAAc,CAACf,KAAK,CAAC,GAAG,CAAC;MACnD,MAAMV,WAAW,CAACiB,MAAM,EAAEgD,KAAK,EAAEC,QAAQ,EAAE9B,UAAU,CAAC;MAEtDA,UAAU,CAAC,oCAAoC,CAAC;MAChDV,iBAAiB,CAAC,IAAI,CAAC;MACvBQ,YAAY,CAAC,KAAK,CAAC;MACnB;MACAI,UAAU,CAACc,eAAe,EAAE,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAAC1C,cAAc,EAAE;MACnBW,UAAU,CAAC,4BAA4B,EAAE,IAAI,CAAC;MAC9C;IACF;IAEA,IAAI,CAACgC,MAAM,CAACC,OAAO,CAAC,mDAAmD,CAAC,EAAE;IAE1E,IAAI;MACF;MACA,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,cAAc,CAACf,KAAK,CAAC,GAAG,CAAC;MACnD,MAAMT,UAAU,CAACgB,MAAM,EAAEgD,KAAK,EAAEC,QAAQ,EAAE9B,UAAU,CAAC;MAErDA,UAAU,CAAC,oCAAoC,CAAC;MAChDV,iBAAiB,CAAC,IAAI,CAAC;MACvBQ,YAAY,CAAC,KAAK,CAAC;MACnB;MACAI,UAAU,CAACc,eAAe,EAAE,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;;EAEA;EACA5D,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX;MACA;MACA;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAM2E,aAAa,GAAGvC,QAAQ,KAAK,WAAW,GAAG,WAAW,GAAG,cAAc;EAC7E,MAAMwC,gBAAgB,GAAG9C,cAAc,GAAGA,cAAc,CAACf,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACiC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGpB,YAAY;EAErG,oBACEnB,OAAA;IAAKoE,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAEpCrE,OAAA;MAAKoE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BrE,OAAA;QAAKoE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BrE,OAAA;UAAIoE,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACxBrE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,yBAExC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLzE,OAAA;UAAGoE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAkD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACNzE,OAAA;QAAKoE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrE,OAAA;UAAKoE,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BrE,OAAA;YAAKoE,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnCzE,OAAA;YAAKoE,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACNzE,OAAA;UAAKoE,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBACpCrE,OAAA;YAAKoE,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClCzE,OAAA;YAAKoE,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzE,OAAA;MAAKoE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3BrE,OAAA;QAAKoE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCrE,OAAA;UAAKoE,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrE,OAAA;YAAAqE,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BzE,OAAA;YAAKoE,SAAS,EAAE,uBAAuBF,aAAa,EAAG;YAAAG,QAAA,gBACrDrE,OAAA;cAAKoE,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClCzE,OAAA;cAAAqE,QAAA,EAAO1C;YAAQ;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzE,OAAA;UAAKoE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBrE,OAAA;YAAKoE,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBrE,OAAA;cAAO0E,OAAO,EAAC,eAAe;cAAAL,QAAA,gBAC5BrE,OAAA;gBAAMoE,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,aAE3C;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRzE,OAAA;cAAKoE,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5BrE,OAAA;gBACE2E,EAAE,EAAC,eAAe;gBAClBjD,IAAI,EAAC,QAAQ;gBACbkD,KAAK,EAAEnE,QAAS;gBAChBoE,QAAQ,EAAGC,CAAC,IAAKpE,WAAW,CAACqE,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,CAAE;gBACjEK,WAAW,EAAC;cAAiB;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzE,OAAA;YAAKoE,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBrE,OAAA;cAAO0E,OAAO,EAAC,WAAW;cAAAL,QAAA,gBACxBrE,OAAA;gBAAMoE,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,oBAExC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRzE,OAAA;cAAKoE,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5BrE,OAAA;gBACE2E,EAAE,EAAC,WAAW;gBACdjD,IAAI,EAAC,MAAM;gBACXkD,KAAK,EAAEjE,IAAK;gBACZkE,QAAQ,EAAGC,CAAC,IAAKlE,OAAO,CAACkE,CAAC,CAACE,MAAM,CAACJ,KAAK;cAAE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzE,OAAA;YAAKoE,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBrE,OAAA;cAAO0E,OAAO,EAAC,aAAa;cAAAL,QAAA,gBAC1BrE,OAAA;gBAAMoE,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,WAExC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRzE,OAAA;cAAKoE,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5BrE,OAAA;gBACE2E,EAAE,EAAC,aAAa;gBAChBjD,IAAI,EAAC,QAAQ;gBACbkD,KAAK,EAAE/D,MAAO;gBACdgE,QAAQ,EAAGC,CAAC,IAAKhE,SAAS,CAACiE,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,CAAE;gBAC/DK,WAAW,EAAC;cAAe;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzE,OAAA;UAAKoE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjCrE,OAAA;YAAQoE,SAAS,EAAC,gBAAgB;YAACc,OAAO,EAAElC,eAAgB;YAAAqB,QAAA,gBAC1DrE,OAAA;cAAMoE,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,wBAEtC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNzE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrE,OAAA;UAAKoE,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BrE,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cAAMoE,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,wBAExC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACJ1D,KAAK,CAACmC,MAAM,GAAG,CAAC,iBACflD,OAAA;YAAKoE,SAAS,EAAC,aAAa;YAAAC,QAAA,GACzBtD,KAAK,CAACmC,MAAM,EAAC,kBAChB;UAAA;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENzE,OAAA;UAAKoE,SAAS,EAAC,iBAAiB;UAACO,EAAE,EAAC,gBAAgB;UAAAN,QAAA,EACjDtD,KAAK,CAACmC,MAAM,KAAK,CAAC,gBACjBlD,OAAA;YAAKoE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BrE,OAAA;cAAKoE,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpCzE,OAAA;cAAAqE,QAAA,EAAG;YAA0D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,gBAENzE,OAAA;YAAKoE,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBtD,KAAK,CAACoE,GAAG,CAAE7B,IAAI,IAAK;cACnB,MAAMd,GAAG,GAAG,GAAG/B,QAAQ,IAAIE,IAAI,IAAI2C,IAAI,EAAE;cACzC,MAAM8B,UAAU,GAAG,CAAC,CAACnE,aAAa,CAACuB,GAAG,CAAC;cACvC,MAAM6C,UAAU,GAAGlE,YAAY,KAAKmC,IAAI;cACxC,MAAMgC,aAAa,GAAGjE,cAAc,KAAKmB,GAAG;cAE5C,IAAI4B,SAAS,GAAG,WAAW;cAC3B,IAAIgB,UAAU,IAAI,CAACE,aAAa,EAAElB,SAAS,IAAI,WAAW;cAC1D,IAAIiB,UAAU,EAAEjB,SAAS,IAAI,WAAW;cACxC,IAAIkB,aAAa,EAAElB,SAAS,IAAI,eAAe;cAE/C,oBACEpE,OAAA;gBAEEoE,SAAS,EAAEA,SAAU;gBACrB,aAAWd,IAAK;gBAChB,YAAUd,GAAI;gBACd0C,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAACC,IAAI,CAAE;gBAAAe,QAAA,gBAErCrE,OAAA;kBAAKoE,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAEf;gBAAI;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EACtCa,aAAa,iBAAItF,OAAA;kBAAKoE,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAC5DW,UAAU,IAAI,CAACE,aAAa,iBAAItF,OAAA;kBAAKoE,SAAS,EAAC,2BAA2B;kBAAAC,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1FzE,OAAA;kBAAKoE,SAAS,EAAC;gBAAmB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GATpCnB,IAAI;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAUN,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNzE,OAAA;QAAKoE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrE,OAAA;UACEoE,SAAS,EAAC,oBAAoB;UAC9Bc,OAAO,EAAE3B,iBAAkB;UAC3BgC,QAAQ,EAAE,CAACpE,YAAY,IAAI,CAAC,CAACE,cAAe;UAAAgD,QAAA,gBAE5CrE,OAAA;YAAMoE,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,yBAEtC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETzE,OAAA;UACEoE,SAAS,EAAC,sBAAsB;UAChCc,OAAO,EAAEA,CAAA,KAAMpD,YAAY,CAAC,IAAI,CAAE;UAClCyD,QAAQ,EAAE,CAAClE,cAAe;UAAAgD,QAAA,gBAE1BrE,OAAA;YAAMoE,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,wBAErC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzE,OAAA;MACEoE,SAAS,EAAE,gBAAgB7C,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACE,OAAO,GAAG,MAAM,GAAG,EAAE,EAAG;MACzE,aAAU,QAAQ;MAAA4C,QAAA,gBAElBrE,OAAA;QAAKoE,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxB9C,MAAM,CAACG,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG;MAAI;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACNzE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE9C,MAAM,CAACE;MAAO;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EAGL5C,SAAS,iBACR7B,OAAA;MAAKoE,SAAS,EAAC,eAAe;MAACc,OAAO,EAAEA,CAAA,KAAMpD,YAAY,CAAC,KAAK,CAAE;MAAAuC,QAAA,eAChErE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAACc,OAAO,EAAGJ,CAAC,IAAKA,CAAC,CAACU,eAAe,CAAC,CAAE;QAAAnB,QAAA,gBACjErE,OAAA;UAAKoE,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BrE,OAAA;YAAAqE,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChCzE,OAAA;YAAQoE,SAAS,EAAC,aAAa;YAACc,OAAO,EAAEA,CAAA,KAAMpD,YAAY,CAAC,KAAK,CAAE;YAAAuC,QAAA,EAAC;UAEpE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENzE,OAAA;UAAKoE,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBrE,OAAA;YAAKoE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BrE,OAAA;cAAKoE,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BrE,OAAA;gBAAMoE,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpCzE,OAAA;gBAAMoE,SAAS,EAAC,WAAW;gBAACO,EAAE,EAAC,WAAW;gBAAAN,QAAA,EAAEF;cAAgB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC,eACNzE,OAAA;cAAAqE,QAAA,EAAG;YAAiD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzE,OAAA;UAAKoE,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BrE,OAAA;YAAQoE,SAAS,EAAC,mBAAmB;YAACc,OAAO,EAAEtB,iBAAkB;YAAAS,QAAA,gBAC/DrE,OAAA;cAAMoE,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,mBAErC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTzE,OAAA;YAAQoE,SAAS,EAAC,kBAAkB;YAACc,OAAO,EAAEnB,gBAAiB;YAAAM,QAAA,gBAC7DrE,OAAA;cAAMoE,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,sBAErC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTzE,OAAA;YAAQoE,SAAS,EAAC,mBAAmB;YAACc,OAAO,EAAEA,CAAA,KAAMpD,YAAY,CAAC,KAAK,CAAE;YAAAuC,QAAA,EAAC;UAE1E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDzE,OAAA;MAAKoE,SAAS,EAAC;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClDzE,OAAA;MAAKoE,SAAS,EAAC;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClDzE,OAAA;MAAKoE,SAAS,EAAC;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACjE,EAAA,CAlbID,kBAAkB;AAAAkF,EAAA,GAAlBlF,kBAAkB;AAobxB,eAAeA,kBAAkB;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}