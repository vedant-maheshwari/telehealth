{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasingh/Downloads/telehealth/frontend/src/components/invitation/send_family_invite.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { sendFamilyInvite } from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for redirection/login check\nimport './family.css';\n\n// Define the relationships that match the backend Enum (RelationshipType)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VALID_RELATIONSHIPS = ['SPOUSE', 'SIBLING', 'PARENT'];\nexport default function SendFamilyInvite() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [relationship, setRelationship] = useState(\"\");\n  const navigate = useNavigate();\n  const token = sessionStorage.getItem(\"token\");\n\n  // Check for token on mount (basic security)\n  if (!token) {\n    navigate(\"/login\");\n    return null; // Return null while redirecting\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !relationship) {\n      alert(\"Please fill in both email and relationship.\");\n      return;\n    }\n    try {\n      // Note: The backend expects the value from the select (e.g., 'SPOUSE')\n      const res = await sendFamilyInvite(token, email, relationship);\n      alert(res.message || \"Invitation sent successfully!\");\n\n      // Clear form upon success\n      setEmail(\"\");\n      setRelationship(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      // Improved error display\n      const errorDetail = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message;\n      alert(`Failed to send invitation: ${errorDetail}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"family-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Invite Family Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"invite-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inviteEmail\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inviteEmail\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"family.member@example.com\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"relationshipType\",\n        children: \"Relationship:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"relationshipType\",\n        value: relationship,\n        onChange: e => setRelationship(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Relationship Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), VALID_RELATIONSHIPS.map(rel => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: rel.toLowerCase(),\n          children: rel\n        }, rel, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Invitation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(SendFamilyInvite, \"HhNU1khMxEALhJBhji6LMHT5Mew=\", false, function () {\n  return [useNavigate];\n});\n_c = SendFamilyInvite;\nvar _c;\n$RefreshReg$(_c, \"SendFamilyInvite\");","map":{"version":3,"names":["React","useState","sendFamilyInvite","useNavigate","jsxDEV","_jsxDEV","VALID_RELATIONSHIPS","SendFamilyInvite","_s","email","setEmail","relationship","setRelationship","navigate","token","sessionStorage","getItem","handleSubmit","e","preventDefault","alert","res","message","err","_err$response","_err$response$data","console","error","errorDetail","response","data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","map","rel","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/shreyasingh/Downloads/telehealth/frontend/src/components/invitation/send_family_invite.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { sendFamilyInvite } from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for redirection/login check\nimport './family.css';\n\n// Define the relationships that match the backend Enum (RelationshipType)\nconst VALID_RELATIONSHIPS = [\n    'SPOUSE',\n    'SIBLING',\n    'PARENT'\n];\n\nexport default function SendFamilyInvite() {\n    const [email, setEmail] = useState(\"\");\n    const [relationship, setRelationship] = useState(\"\");\n    const navigate = useNavigate();\n    const token = sessionStorage.getItem(\"token\");\n\n    // Check for token on mount (basic security)\n    if (!token) {\n        navigate(\"/login\");\n        return null; // Return null while redirecting\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!email || !relationship) {\n            alert(\"Please fill in both email and relationship.\");\n            return;\n        }\n\n        try {\n            // Note: The backend expects the value from the select (e.g., 'SPOUSE')\n            const res = await sendFamilyInvite(token, email, relationship);\n            \n            alert(res.message || \"Invitation sent successfully!\");\n            \n            // Clear form upon success\n            setEmail(\"\");\n            setRelationship(\"\");\n        } catch (err) {\n            console.error(err);\n            // Improved error display\n            const errorDetail = err.response?.data?.detail || err.message;\n            alert(`Failed to send invitation: ${errorDetail}`);\n        }\n    };\n\n    return (\n        <div className=\"family-container\">\n            <h2>Invite Family Members</h2>\n            <form onSubmit={handleSubmit} className=\"invite-form\">\n                \n                <label htmlFor=\"inviteEmail\">Email:</label>\n                <input \n                    id=\"inviteEmail\"\n                    type=\"email\" \n                    value={email} \n                    onChange={e => setEmail(e.target.value)} \n                    placeholder=\"family.member@example.com\"\n                    required \n                />\n\n                <label htmlFor=\"relationshipType\">Relationship:</label>\n                {/* CHANGE: Replaced text input with a select dropdown.\n                  This ensures the value sent matches the backend Enum (SPOUSE, SIBLING, PARENT).\n                */}\n                <select \n                    id=\"relationshipType\"\n                    value={relationship} \n                    onChange={e => setRelationship(e.target.value)} \n                    required\n                >\n                    <option value=\"\" disabled>Select Relationship Type</option>\n                    {VALID_RELATIONSHIPS.map(rel => (\n                        <option key={rel} value={rel.toLowerCase()}>{rel}</option>\n                    ))}\n                </select>\n\n                <button type=\"submit\">Send Invitation</button>\n            </form>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}