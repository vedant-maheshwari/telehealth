{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasingh/Downloads/frontend_changes_telehealth/frontend/src/components/family_management/family_management.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./family_management.css\";\nimport { getFamilyMembers, sendFamilyInvite } from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FamilyManagement() {\n  _s();\n  const [family, setFamily] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  // Initialize relationship with a default/first option\n  const [relationship, setRelationship] = useState(\"spouse\");\n  const navigate = useNavigate();\n\n  // Define the list of allowed relationships\n  const relationshipOptions = ['spouse', 'sibling', 'parent', 'child', 'other'];\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    loadFamily();\n  }, [navigate]);\n  const loadFamily = async () => {\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      const data = await getFamilyMembers(token);\n      setFamily(data);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to load family members\");\n    }\n  };\n  const handleInvite = async e => {\n    e.preventDefault();\n    // Validate email and ensure relationship is selected (should be true since 'spouse' is default)\n    if (!email || !relationship) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      const data = await sendFamilyInvite(token, email, relationship);\n      alert(data.msg || \"Invitation sent!\");\n      setEmail(\"\");\n      setRelationship(relationshipOptions[0]); // Reset to the first option after success\n      loadFamily();\n    } catch (err) {\n      console.error(err);\n      // Enhanced error message if the API provides it\n      const errorMessage = err.message || \"Failed to send invitation\";\n      alert(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"family-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Family Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Family Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), family.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No family members yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : family.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), \" \\u2014 \", member.relationship_type]\n      }, member.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Invitation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleInvite,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invite-email\",\n          children: \"Email of family member:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"invite-email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"relationship-select\",\n          children: \"Relationship:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"relationship-select\",\n          value: relationship,\n          onChange: e => setRelationship(e.target.value),\n          required: true,\n          children: relationshipOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: [opt.charAt(0).toUpperCase() + opt.slice(1), \" \"]\n          }, opt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send Invitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(FamilyManagement, \"NOFtElfmYb/R5iu5dj1VEgJB8Gw=\", false, function () {\n  return [useNavigate];\n});\n_c = FamilyManagement;\nvar _c;\n$RefreshReg$(_c, \"FamilyManagement\");","map":{"version":3,"names":["React","useEffect","useState","getFamilyMembers","sendFamilyInvite","useNavigate","jsxDEV","_jsxDEV","FamilyManagement","_s","family","setFamily","email","setEmail","relationship","setRelationship","navigate","relationshipOptions","token","sessionStorage","getItem","loadFamily","data","err","console","error","alert","handleInvite","e","preventDefault","msg","errorMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","member","name","relationship_type","id","onSubmit","htmlFor","type","value","onChange","target","required","opt","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/shreyasingh/Downloads/frontend_changes_telehealth/frontend/src/components/family_management/family_management.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./family_management.css\";\nimport { getFamilyMembers, sendFamilyInvite } from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function FamilyManagement() {\n  const [family, setFamily] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  // Initialize relationship with a default/first option\n  const [relationship, setRelationship] = useState(\"spouse\"); \n  const navigate = useNavigate();\n\n  // Define the list of allowed relationships\n  const relationshipOptions = ['spouse', 'sibling', 'parent', 'child', 'other'];\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    loadFamily();\n  }, [navigate]);\n\n  const loadFamily = async () => {\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      const data = await getFamilyMembers(token);\n      setFamily(data);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to load family members\");\n    }\n  };\n\n  const handleInvite = async (e) => {\n    e.preventDefault();\n    // Validate email and ensure relationship is selected (should be true since 'spouse' is default)\n    if (!email || !relationship) { \n      alert(\"Please fill in all fields\");\n      return;\n    }\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      const data = await sendFamilyInvite(token, email, relationship);\n      alert(data.msg || \"Invitation sent!\");\n      setEmail(\"\");\n      setRelationship(relationshipOptions[0]); // Reset to the first option after success\n      loadFamily();\n    } catch (err) {\n      console.error(err);\n      // Enhanced error message if the API provides it\n      const errorMessage = err.message || \"Failed to send invitation\";\n      alert(errorMessage); \n    }\n  };\n\n  return (\n    <div className=\"family-management\">\n      <h2>Family Management</h2>\n      {/* --- Your Family Members Section --- */}\n      <div className=\"section\">\n        <h3>Your Family Members</h3>\n        {family.length === 0 ? (\n          <p>No family members yet.</p>\n        ) : (\n          family.map((member) => (\n            <div className=\"card\" key={member.id}>\n              <b>{member.name}</b> â€” {member.relationship_type}\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* --- Send Invitation Section with Dropdown --- */}\n      <div className=\"section\">\n        <h3>Send Invitation</h3>\n        <form onSubmit={handleInvite}>\n          <label htmlFor=\"invite-email\">Email of family member:</label>\n          <input\n            id=\"invite-email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          \n          <label htmlFor=\"relationship-select\">Relationship:</label>\n          <select\n            id=\"relationship-select\"\n            value={relationship}\n            onChange={(e) => setRelationship(e.target.value)}\n            required\n          >\n            {/* Map through the predefined relationship options */}\n            {relationshipOptions.map((opt) => (\n              <option key={opt} value={opt}>\n                {opt.charAt(0).toUpperCase() + opt.slice(1)} {/* Capitalize first letter for display */}\n              </option>\n            ))}\n          </select>\n\n          <button type=\"submit\">Send Invitation</button>\n        </form>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}